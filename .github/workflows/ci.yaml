name: Electron CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4.1.5
      # Check out the code in the repository

    - name: Set up Node.js
      uses: actions/setup-node@v4.1.5
      with:
        node-version: '16'
      # Set up a specific version of Node.js

    - name: Install dependencies
      run: npm install
      # Install npm dependencies

    - name: Run build
      run: npm run build
      # Execute the build script defined in package.json

    - name: Package Application
      run: npm run package
      # Package the application using electron-builder

    - name: Archive Artifacts
      uses: actions/upload-artifact@v4.1.5
      with:
        name: packaged-app
        path: package/
      # Upload the packaged application as an artifact for storage

  vulnerability-scan:
    runs-on: ubuntu-latest
    needs: build-and-package
    steps:
      - name: Audit for vulnerabilities
        run: npm audit --json > audit.json || echo "Failed to generate audit report"

      - name: Check for high or critical vulnerabilities
        run: |
          if [ -s "audit.json" ] && jq -e '.metadata.vulnerabilities | .[] | select(.severity == "high" or .severity == "critical")' audit.json >/dev/null; then
            echo "High or critical vulnerabilities found."
            exit 1
          else
            echo "No high or critical vulnerabilities found."
            touch vulnerabilities-passed.txt  # Creating a dummy file to indicate success
          fi

      - name: Upload result
        uses: actions/upload-artifact@v2
        with:
          name: vulnerability-result
          path: vulnerabilities-passed.txt  # Uploading the dummy file

  package-for-platform:
    runs-on: ubuntu-latest
    needs: build-and-package
    steps:
      - name: Download Packaged App
        uses: actions/download-artifact@v3
        with:
          name: packaged-app
          path: .

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies
        run: npm install --production
        working-directory: ${{ github.workspace }}

      - name: Package for Windows
        if: runner.os == 'windows'
        run: npm run dist:win

      - name: Package for macOS
        if: runner.os == 'macos'
        run: npm run dist:mac

      - name: Package for Linux
        if: runner.os == 'linux'
        run: npm run dist:linux

      - name: Archive Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packaged-app-platform
          path: dist/

      - name: Upload result
        uses: actions/upload-artifact@v2
        with:
          name: package-for-platform-result
          path: dist/


  send-discord-notification:
    runs-on: ubuntu-latest
    needs: [vulnerability-scan, package-for-platform]
    if: always()  # Ensure the job always runs
    steps:
      - name: Check job status
        run: |
          echo "vulnerability-scan status: ${{ needs.vulnerability-scan.result }}"
          echo "package-for-platform status: ${{ needs.package-for-platform.result }}"
        
      - name: Test Success
        uses: rjstone/discord-webhook-notify@v1.0.4
        if: ${{ needs.vulnerability-scan.result == 'success' && needs.package-for-platform.result == 'success' }}
        with:
          severity: info
          details: Test Succeeded!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Test Failure
        uses: rjstone/discord-webhook-notify@v1.0.4
        if: ${{ needs.vulnerability-scan.result == 'failure' || needs.package-for-platform.result == 'failure' }}
        with:
          severity: error
          details: Test Failed!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Test Cancelled
        uses: rjstone/discord-webhook-notify@v1.0.4
        if: cancelled()
        with:
          severity: warn
          details: Test Cancelled!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
